@baseUrl = http://localhost:3001/api/v1
@authBaseUrl = {{baseUrl}}/auth

### -------------------------------
### 1. HEALTH CHECK
### -------------------------------
GET {{baseUrl}}/health HTTP/1.1

### -------------------------------
### 2. USER REGISTRATION
### -------------------------------

### 2.1 Admin Registration
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "admin.test@ukaab.com",
  "password": "AdminPass123!",
  "user_type": "admin",
  "full_name": "Test Admin User"
}

### 2.2 Driver Registration (Phone Only)
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "phone": "+923001234567",
  "password": "DriverPass123!",
  "user_type": "driver",
  "full_name": "Test Driver Phone"
}

### 2.3 Driver Registration (With Email)
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "driver.test@ukaab.com",
  "password": "DriverPass123!",
  "user_type": "driver",
  "full_name": "Test Driver Email"
}

### 2.4 Shipper Registration
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "shipper.test@ukaab.com",
  "password": "ShipperPass123!",
  "user_type": "shipper",
  "full_name": "Test Shipper User",
  "phone": "+923001234568"
}

### 2.5 Trucking Company Registration
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "trucking.test@ukaab.com",
  "password": "TruckingPass123!",
  "user_type": "trucking_company",
  "full_name": "Test Trucking Owner",
  "company_name": "Test Trucking Co",
  "company_address": "123 Test Street, Test City",
  "fleet_size": 5
}

### -------------------------------
### 3. LOGIN TESTS
### -------------------------------

### 3.1 Admin Login
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "admin.test@ukaab.com",
  "password": "AdminPass123!"
}

### Save Admin Token
@adminToken = {{response.body.token}}

### 3.2 Driver Login (Phone)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "phone": "+923001234567",
  "password": "DriverPass123!"
}

### Save Phone Driver Token
@phoneDriverToken = {{response.body.token}}

### 3.3 Driver Login (Email)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "driver.test@ukaab.com",
  "password": "DriverPass123!"
}

### Save Email Driver Token
@emailDriverToken = {{response.body.token}}

### 3.4 Shipper Login
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "shipper.test@ukaab.com",
  "password": "ShipperPass123!"
}

### Save Shipper Token
@shipperToken = {{response.body.token}}

### 3.5 Trucking Company Login
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "trucking.test@ukaab.com",
  "password": "TruckingPass123!"
}

### Save Trucking Token
@truckingToken = {{response.body.token}}

### 3.6 Invalid Login (Wrong Password)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "admin.test@ukaab.com",
  "password": "WrongPassword123!"
}

### 3.7 Invalid Login (Nonexistent User)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "nonexistent@ukaab.com",
  "password": "SomePassword123!"
}

### -------------------------------
### 4. PROFILE TESTS
### -------------------------------

### 4.1 Get Admin Profile
GET {{authBaseUrl}}/me
Authorization: Bearer {{adminToken}}

### 4.2 Get Driver Profile (Phone)
GET {{authBaseUrl}}/me
Authorization: Bearer {{phoneDriverToken}}

### 4.3 Get Driver Profile (Email)
GET {{authBaseUrl}}/me
Authorization: Bearer {{emailDriverToken}}

### 4.4 Get Shipper Profile
GET {{authBaseUrl}}/me
Authorization: Bearer {{shipperToken}}

### 4.5 Get Trucking Company Profile
GET {{authBaseUrl}}/me
Authorization: Bearer {{truckingToken}}

### 4.6 Unauthorized Profile Access
GET {{authBaseUrl}}/me

### -------------------------------
### 5. PASSWORD UPDATE TESTS
### -------------------------------

### 5.1 Admin Updates Password
PATCH {{authBaseUrl}}/updatePassword
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "currentPassword": "AdminPass123!",
  "newPassword": "NewAdminPass123!"
}

### 5.2 Verify Admin Password Update
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "admin.test@ukaab.com",
  "password": "NewAdminPass123!"
}

### 5.3 Invalid Password Update (Wrong Current Password)
PATCH {{authBaseUrl}}/updatePassword
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "currentPassword": "WrongCurrentPass!",
  "newPassword": "NewTestPassword123!"
}

### -------------------------------
### 6. PASSWORD RESET TESTS
### -------------------------------

### 6.1 Admin Password Reset Flow
### Step 1: Request Reset
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "admin.test@ukaab.com"
}

### Step 2: Check console for reset token in Ethereal URL
### Step 3: Reset Password (Replace with actual token)
PATCH {{authBaseUrl}}/resetPassword/REPLACE_WITH_ACTUAL_TOKEN
Content-Type: application/json

{
  "newPassword": "ResetAdminPass123!"
}

### Step 4: Verify New Password
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "admin.test@ukaab.com",
  "password": "ResetAdminPass123!"
}

### 6.2 Driver Password Reset Flow
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "driver.test@ukaab.com"
}

### 6.3 Shipper Password Reset Flow
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "shipper.test@ukaab.com"
}

### 6.4 Trucking Company Password Reset Flow
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "trucking.test@ukaab.com"
}

### -------------------------------
### 7. NEGATIVE TEST CASES
### -------------------------------

### 7.1 Invalid Reset Token
PATCH {{authBaseUrl}}/resetPassword/INVALID_TOKEN_123
Content-Type: application/json

{
  "newPassword": "ShouldFail123!"
}

### 7.2 Weak New Password
PATCH {{authBaseUrl}}/resetPassword/SOME_TOKEN
Content-Type: application/json

{
  "newPassword": "weak"
}

### 7.3 Missing New Password
PATCH {{authBaseUrl}}/resetPassword/SOME_TOKEN
Content-Type: application/json

{}

### 7.4 Invalid Forgot Password Request
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "invalid_field": "test@example.com"
}

### 7.5 Nonexistent Email Forgot Password
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "nonexistent@ukaab.com"
}

### -------------------------------
### 8. ADMIN FUNCTIONALITY TESTS
### -------------------------------

### 8.1 Create New Admin (by existing admin)
POST {{authBaseUrl}}/createAdmin
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "email": "new.admin@ukaab.com",
  "password": "NewAdminPass123!",
  "full_name": "New Admin User"
}

### 8.2 Unauthorized Admin Creation (non-admin user)
POST {{authBaseUrl}}/createAdmin
Authorization: Bearer {{shipperToken}}
Content-Type: application/json

{
  "email": "unauthorized.admin@ukaab.com",
  "password": "Unauthorized123!",
  "full_name": "Unauthorized Admin"
}

### -------------------------------
### TESTING INSTRUCTIONS
### -------------------------------
### 1. Run tests in sequence from top to bottom
### 2. For password reset tests:
###    - Execute Step 1 (forgotPassword)
###    - Check backend console for token in Ethereal URL
###    - Copy token and replace in resetPassword request
###    - Execute Step 2 (resetPassword)
###    - Verify with login test
### 3. Token validity: 15 minutes
### 4. All passwords must meet complexity requirements:
###    - 8+ characters, 1 uppercase, 1 lowercase, 1 number, 1 symbol


## Test User Registration (Signup) with OTP
POST {{authBaseUrl}}/signup HTTP/1.1
Content-Type: application/json
Host: localhost:3000

{
  "email": "testdriverOTP2@example.com",
  "password": "Secure123!",
  "user_type": "driver",
  "full_name": "Test Driver OTP2",
  "cnic": "12345-6789012-3",
  "owns_company": true,
  "company_name": "Test Driver Company OTP",
  "company_address": "123 Test Street",
  "fleet_size": 2
}

### Test OTP Verification
POST {{authBaseUrl}}/verify-otp HTTP/1.1
Content-Type: application/json
Host: localhost:3000

{
  "user_id": 18,
  "otp_code": "234978" 
}

### Test Resend OTP
POST {{authBaseUrl}}/resend-otp HTTP/1.1
Content-Type: application/json
Host: localhost:3000

{
  "user_id": 15
}

### Test Login (Before Verification - Should Fail)
POST {{authBaseUrl}}/login HTTP/1.1
Content-Type: application/json
Host: localhost:3000

{
  "email": "testdriverOTP2@example.com",
  "password": "Secure123!"
}

### Test Login (After Verification - Should Succeed)
POST {{authBaseUrl}}/login HTTP/1.1
Content-Type: application/json
Host: localhost:3000

{
  "email": "testdriverOTP2@example.com",
  "password": "Secure123!"
}

### Test Protected Route Access
GET {{baseUrl}}/dashboard/overview HTTP/1.1
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTgsImF1dGhfdXNlcl9pZCI6ImQ0YzIwYzBmLTU5ODktNGRkYS1iODA4LTRhZmM3NGVmNTZkMyIsImlhdCI6MTc1NjAyMjg5NywiZXhwIjoxNzYzNzk4ODk3fQ.ycgbKij4_WlPdrhn7Wb0rpjMLzcLpNtRxF_vAoi8plQ
Host: localhost:3000

