@baseUrl = http://localhost:3001/api/v1
@authBaseUrl = {{baseUrl}}/auth

### -------------------------------
### 1. HEALTH CHECK
### -------------------------------
GET {{baseUrl}}/health HTTP/1.1

### -------------------------------
### 2. USER REGISTRATION
### -------------------------------

### 2.1 Admin Registration
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com",
  "password": "TestAdmin1234!",
  "user_type": "admin",
  "full_name": "Test Admin User",
  "phone": "+923001234500"
}

### 2.2 Driver Registration (Phone Only)
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "phone": "+923001234501",
  "password": "TestDriver1234!",
  "user_type": "driver",
  "full_name": "Test Driver User"
}

### 2.3 Driver Registration (With Email)
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "testdriver@ukaabtest.com",
  "password": "TestDriver1234!",
  "user_type": "driver",
  "full_name": "Test Driver User"
}

### 2.4 Shipper Registration
POST {{authBaseUrl}}/signup
Content-Type: application/json

{
  "email": "testshipper@ukaabtest.com",
  "password": "TestShipper1234!",
  "user_type": "shipper",
  "full_name": "Test Shipper User",
  "phone": "+923001234502"
}

### -------------------------------
### 3. LOGIN TESTS
### -------------------------------

### 3.1 Admin Login (Email)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com",
  "password": "TestAdmin1234!"
}

### Save Admin Token
@adminToken = {{response.body.token}}

### 3.2 Driver Login (Phone)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "phone": "+923001234501",
  "password": "TestDriver1234!"
}

### Save Phone Driver Token
@phoneDriverToken = {{response.body.token}}

### 3.3 Driver Login (Email)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testdriver@ukaabtest.com",
  "password": "TestDriver1234!"
}

### Save Email Driver Token
@emailDriverToken = {{response.body.token}}

### 3.4 Shipper Login
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testshipper@ukaabtest.com",
  "password": "TestShipper1234!"
}

### Save Shipper Token
@shipperToken = {{response.body.token}}

### 3.5 Invalid Login (Wrong Password)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com",
  "password": "WrongTestPassword"
}

### 3.6 Invalid Login (Nonexistent User)
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "nonexistenttest@ukaabtest.com",
  "password": "SomeTestPassword123"
}

### -------------------------------
### 4. PROFILE TESTS
### -------------------------------

### 4.1 Get Admin Profile
GET {{authBaseUrl}}/me
Authorization: Bearer {{adminToken}}
Content-Type: application/json

### 4.2 Get Driver Profile (Phone)
GET {{authBaseUrl}}/me
Authorization: Bearer {{phoneDriverToken}}
Content-Type: application/json

### 4.3 Get Driver Profile (Email)
GET {{authBaseUrl}}/me
Authorization: Bearer {{emailDriverToken}}
Content-Type: application/json

### 4.4 Get Shipper Profile
GET {{authBaseUrl}}/me
Authorization: Bearer {{shipperToken}}
Content-Type: application/json

### 4.5 Unauthorized Profile Access
GET {{authBaseUrl}}/me
Content-Type: application/json

### -------------------------------
### 5. PASSWORD UPDATE TESTS
### -------------------------------

### 5.1 Admin Updates Password
PATCH {{authBaseUrl}}/updatePassword
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "currentPassword": "TestAdmin1234!",
  "newPassword": "NewTestAdmin1234!"
}

### 5.2 Verify Admin Password Update
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com",
  "password": "NewTestAdmin1234!"
}

### 5.3 Invalid Password Update (Missing Current Password)
PATCH {{authBaseUrl}}/updatePassword
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "newPassword": "NewTestPassword123!"
}

### -------------------------------
### 6. PASSWORD RESET TESTS
### -------------------------------

### 6.1 Admin Password Reset Flow
### Step 1: Request Reset
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com"
}

### Step 2: Reset Password (Replace ADMIN_RESET_TOKEN)
PATCH {{authBaseUrl}}/resetPassword/ADMIN_RESET_TOKEN_HERE
Content-Type: application/json

{
  "newPassword": "NewAdminPass123!"
}

### Step 3: Verify New Password
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testadmin@ukaabtest.com",
  "password": "NewAdminPass123!"
}

### 6.2 Driver Password Reset Flow (Email)
### Step 1: Request Reset
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "testdriver@ukaabtest.com"
}

### Step 2: Reset Password (Replace DRIVER_RESET_TOKEN)
PATCH {{authBaseUrl}}/resetPassword/DRIVER_RESET_TOKEN_HERE
Content-Type: application/json

{
  "newPassword": "NewDriverPass123!"
}

### Step 3: Verify New Password
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testdriver@ukaabtest.com",
  "password": "NewDriverPass123!"
}

### 6.3 Shipper Password Reset Flow
### Step 1: Request Reset
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "email": "testshipper@ukaabtest.com"
}

### Step 2: Reset Password (Replace SHIPPER_RESET_TOKEN)
PATCH {{authBaseUrl}}/resetPassword/SHIPPER_RESET_TOKEN_HERE
Content-Type: application/json

{
  "newPassword": "NewShipperPass123!"
}

### Step 3: Verify New Password
POST {{authBaseUrl}}/login
Content-Type: application/json

{
  "email": "testshipper@ukaabtest.com",
  "password": "NewShipperPass123!"
}

### -------------------------------
### 7. NEGATIVE TEST CASES
### -------------------------------

### 7.1 Invalid Reset Token
PATCH {{authBaseUrl}}/resetPassword/INVALID_TOKEN_123
Content-Type: application/json

{
  "newPassword": "ShouldFail123!"
}

### 7.2 Expired Token Test
PATCH {{authBaseUrl}}/resetPassword/EXPIRED_TOKEN_HERE
Content-Type: application/json

{
  "newPassword": "ShouldFail123!"
}

### 7.3 Weak New Password
PATCH {{authBaseUrl}}/resetPassword/FRESH_TOKEN_HERE
Content-Type: application/json

{
  "newPassword": "weak"
}

### 7.4 Missing New Password
PATCH {{authBaseUrl}}/resetPassword/FRESH_TOKEN_HERE
Content-Type: application/json

{}

### 7.5 Invalid Forgot Password Request
POST {{authBaseUrl}}/forgotPassword
Content-Type: application/json

{
  "invalid_field": "test@example.com"
}

### -------------------------------
### TESTING INSTRUCTIONS
### -------------------------------
### 1. Run tests in sequence from top to bottom
### 2. For password reset tests:
###    - Execute Step 1 (forgotPassword)
###    - Check backend console for token in Ethereal URL
###    - Copy token and replace *_RESET_TOKEN_HERE placeholders
###    - Execute Step 2 (resetPassword)
###    - Verify with Step 3 (login)
### 3. Token validity: 15 minutes (default)